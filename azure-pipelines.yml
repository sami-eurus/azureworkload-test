# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - main

# pool:
#   name: 'Azure Pipelines'


# jobs:
# - job: Build
#   displayName: 'Build job'
#   steps:
#   - script: echo 'Building the application...'
#     displayName: 'Build step'

# - job: Deploy
#   displayName: 'Deploy job'
#   dependsOn: Build
#   steps:
#   - script: echo 'Deploying the application...'
#     displayName: 'Deploy step'

trigger:
- main

pool:
  name: 'ltscale-custom'

steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '16.x'
#   displayName: 'Install Node.js'

# - script: |
#     npm install
#   displayName: 'npm install'

# - script: |
#     npm run build
#   displayName: 'npm build'

# - task: CopyFiles@2
#   inputs:
#     SourceFolder: '$(Build.SourcesDirectory)'
#     Contents: |
#       src/*
#       public/*
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'
#   displayName: 'Copy project files'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: true


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    ArtifactName: 'e2e-server-$(Build.BuildId)'
  displayName: 'Publish npm artifact'


# resources:
#   deployments:
#   - deployment: ltscale
#     displayName: 'My Deployment Group'
#     environment:
#       name: 'My Environment'
#       resourceType: VirtualMachine
#       tags: 'web, production'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - script: |
#               echo "yo got it"
#             displayName: 'Deploy script'
#     timeoutInMinutes: 30
